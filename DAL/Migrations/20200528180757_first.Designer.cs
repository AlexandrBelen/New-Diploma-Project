// <auto-generated />
using System;
using DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200528180757_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.AcademicTitle", b =>
                {
                    b.Property<int>("IdAcademicTitle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("academicTitleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAcademicTitle");

                    b.ToTable("AcademicTitles");
                });

            modelBuilder.Entity("DAL.Entities.AcademicYear", b =>
                {
                    b.Property<int>("IdYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdYear");

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("DAL.Entities.BasicEducation", b =>
                {
                    b.Property<int>("IdBasicEducation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_speciality")
                        .HasColumnType("int");

                    b.Property<string>("place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("qualification")
                        .HasColumnType("int");

                    b.Property<string>("years")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBasicEducation");

                    b.HasIndex("id_speciality");

                    b.ToTable("BasicEducations");
                });

            modelBuilder.Entity("DAL.Entities.Cathedra", b =>
                {
                    b.Property<int>("IdCathedra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_faculty")
                        .HasColumnType("int");

                    b.Property<string>("cathedraName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCathedra");

                    b.HasIndex("ID_faculty");

                    b.ToTable("Cathedra");
                });

            modelBuilder.Entity("DAL.Entities.Classroom", b =>
                {
                    b.Property<int>("IdClassroom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classroomNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_classroomType")
                        .HasColumnType("int");

                    b.HasKey("IdClassroom");

                    b.HasIndex("id_classroomType");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("DAL.Entities.ClassroomType", b =>
                {
                    b.Property<int>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdType");

                    b.ToTable("ClassroomTypes");
                });

            modelBuilder.Entity("DAL.Entities.Curriculum", b =>
                {
                    b.Property<int>("IDCurriculum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BasedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_EducationalDegree")
                        .HasColumnType("int");

                    b.Property<int>("ID_Form_of_education")
                        .HasColumnType("int");

                    b.Property<int>("ID_Specialization")
                        .HasColumnType("int");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCurriculum");

                    b.HasIndex("ID_EducationalDegree");

                    b.HasIndex("ID_Form_of_education");

                    b.HasIndex("ID_Specialization");

                    b.ToTable("Curriculum");
                });

            modelBuilder.Entity("DAL.Entities.Cycle", b =>
                {
                    b.Property<int>("IdCycle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCycle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCycle");

                    b.ToTable("Cycles");
                });

            modelBuilder.Entity("DAL.Entities.DirectorySpeciality", b =>
                {
                    b.Property<int>("IdSpeciality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_KnowledgeArea")
                        .HasColumnType("int");

                    b.Property<string>("specialityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specialityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSpeciality");

                    b.HasIndex("ID_KnowledgeArea");

                    b.ToTable("DirectorySpeciality");
                });

            modelBuilder.Entity("DAL.Entities.EducationalDegree", b =>
                {
                    b.Property<int>("IdDegree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("degreeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDegree");

                    b.ToTable("EducationalDegrees");
                });

            modelBuilder.Entity("DAL.Entities.Faculty", b =>
                {
                    b.Property<int>("IdFaculty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("facultyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("facultyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFaculty");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("DAL.Entities.FormDelivery", b =>
                {
                    b.Property<int>("IdDelivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameDelivery")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDelivery");

                    b.ToTable("FormDeliveries");
                });

            modelBuilder.Entity("DAL.Entities.Form_of_education", b =>
                {
                    b.Property<int>("IdFormEducation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFormEducation");

                    b.ToTable("Form_Of_Educations");
                });

            modelBuilder.Entity("DAL.Entities.Gruppa", b =>
                {
                    b.Property<int>("IdGruppa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("educLevel")
                        .HasColumnType("int");

                    b.Property<string>("gruppaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_cathedra")
                        .HasColumnType("int");

                    b.Property<int>("id_curator")
                        .HasColumnType("int");

                    b.Property<int>("id_formOfEducation")
                        .HasColumnType("int");

                    b.Property<string>("year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGruppa");

                    b.HasIndex("id_cathedra");

                    b.HasIndex("id_curator");

                    b.HasIndex("id_formOfEducation");

                    b.ToTable("Gruppas");
                });

            modelBuilder.Entity("DAL.Entities.KnowledgeArea", b =>
                {
                    b.Property<int>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("areaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("areaName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArea");

                    b.ToTable("KnowledgeAreas");
                });

            modelBuilder.Entity("DAL.Entities.ParaNumber", b =>
                {
                    b.Property<int>("IdPara")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("paraTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPara");

                    b.ToTable("ParaNumbers");
                });

            modelBuilder.Entity("DAL.Entities.PlanEducationalProcess", b =>
                {
                    b.Property<int>("ID_PlanEducationalProcess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Curriculum")
                        .HasColumnType("int");

                    b.Property<int>("ID_FormDelivery")
                        .HasColumnType("int");

                    b.Property<int>("ID_UnderCycle")
                        .HasColumnType("int");

                    b.Property<string>("IndependentWorkHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaboratoryHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LectureHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameDiscipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticesHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Projects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semester")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_PlanEducationalProcess");

                    b.HasIndex("ID_FormDelivery");

                    b.HasIndex("ID_UnderCycle");

                    b.ToTable("PlanEducationalProcesses");
                });

            modelBuilder.Entity("DAL.Entities.Position", b =>
                {
                    b.Property<int>("IdPosition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("positionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPosition");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("DAL.Entities.Rank", b =>
                {
                    b.Property<int>("IdRank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rankDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRank");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("DAL.Entities.Role", b =>
                {
                    b.Property<int>("ID_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_role");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DAL.Entities.Semestr", b =>
                {
                    b.Property<int>("IdSemestr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("semestrNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSemestr");

                    b.ToTable("Semestrs");
                });

            modelBuilder.Entity("DAL.Entities.Shedule", b =>
                {
                    b.Property<int>("IdShedule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_calssroom")
                        .HasColumnType("int");

                    b.Property<int>("id_day")
                        .HasColumnType("int");

                    b.Property<int>("id_discipline")
                        .HasColumnType("int");

                    b.Property<int>("id_gruppa")
                        .HasColumnType("int");

                    b.Property<int>("id_para")
                        .HasColumnType("int");

                    b.Property<int>("id_semestr")
                        .HasColumnType("int");

                    b.Property<int?>("id_teacher")
                        .HasColumnType("int");

                    b.Property<int>("id_week")
                        .HasColumnType("int");

                    b.Property<int>("id_year")
                        .HasColumnType("int");

                    b.HasKey("IdShedule");

                    b.HasIndex("id_calssroom");

                    b.HasIndex("id_day");

                    b.HasIndex("id_discipline");

                    b.HasIndex("id_gruppa");

                    b.HasIndex("id_para");

                    b.HasIndex("id_semestr");

                    b.HasIndex("id_teacher");

                    b.HasIndex("id_week");

                    b.HasIndex("id_year");

                    b.ToTable("Shedules");
                });

            modelBuilder.Entity("DAL.Entities.Specialization", b =>
                {
                    b.Property<int>("ID_Specialization")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_Cathedra")
                        .HasColumnType("int");

                    b.Property<int>("ID_Speciality")
                        .HasColumnType("int");

                    b.Property<string>("nameSpecialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Specialization");

                    b.HasIndex("ID_Cathedra");

                    b.HasIndex("ID_Speciality");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("DAL.Entities.Student", b =>
                {
                    b.Property<int>("stundentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("educationProgram")
                        .HasColumnType("int");

                    b.Property<int>("id_cathedra")
                        .HasColumnType("int");

                    b.Property<int?>("id_faculty")
                        .HasColumnType("int");

                    b.Property<int?>("id_gruppa")
                        .HasColumnType("int");

                    b.Property<int>("id_speciality")
                        .HasColumnType("int");

                    b.Property<int>("id_studentInfo")
                        .HasColumnType("int");

                    b.Property<int>("institute")
                        .HasColumnType("int");

                    b.Property<string>("startYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stundentID");

                    b.HasIndex("id_cathedra");

                    b.HasIndex("id_faculty");

                    b.HasIndex("id_gruppa");

                    b.HasIndex("id_speciality");

                    b.HasIndex("id_studentInfo");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DAL.Entities.StudentInfo", b =>
                {
                    b.Property<int>("stundtInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentFirstParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentFirstParentPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSecondParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSecondParentPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("homeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studentSex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stundtInfoID");

                    b.ToTable("StudentInfoes");
                });

            modelBuilder.Entity("DAL.Entities.Teacher", b =>
                {
                    b.Property<int>("idTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("employmentYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_academicTitle")
                        .HasColumnType("int");

                    b.Property<int>("id_position")
                        .HasColumnType("int");

                    b.Property<int>("id_rank")
                        .HasColumnType("int");

                    b.Property<string>("releaseYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("staff")
                        .HasColumnType("tinyint");

                    b.Property<int>("teacherInfoId")
                        .HasColumnType("int");

                    b.HasKey("idTeacher");

                    b.HasIndex("id_academicTitle");

                    b.HasIndex("id_position");

                    b.HasIndex("id_rank");

                    b.HasIndex("teacherInfoId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DAL.Entities.TeacherInfo", b =>
                {
                    b.Property<int>("teacherInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("homeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_basicEducation")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trainingYear")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("teacherInfoId");

                    b.HasIndex("id_basicEducation");

                    b.ToTable("TeacherInfoes");
                });

            modelBuilder.Entity("DAL.Entities.TotalLoad", b =>
                {
                    b.Property<int>("IdTotalLoad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("amountOfDiscipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("budgetGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("budgetGroupsLabs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bugetGroupPractice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactGroupPractice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contractGroupLabs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("controlWorks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseProjects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("credits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exams")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_teacher")
                        .HasColumnType("int");

                    b.Property<string>("labs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lectures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("practices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("semester")
                        .HasColumnType("int");

                    b.Property<string>("studentsAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("totalHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tutoring")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTotalLoad");

                    b.HasIndex("id_teacher");

                    b.HasIndex("semester");

                    b.ToTable("TotalLoads");
                });

            modelBuilder.Entity("DAL.Entities.UnderCycle", b =>
                {
                    b.Property<int>("IdUnderCycle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeUnderCycle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_cycle")
                        .HasColumnType("int");

                    b.Property<string>("NameUnderCycle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUnderCycle");

                    b.HasIndex("ID_cycle");

                    b.ToTable("UnderCycles");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<int>("ID_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Role")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_user");

                    b.HasIndex("ID_Role");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DAL.Entities.Week", b =>
                {
                    b.Property<int>("IdWeek")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("weekNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdWeek");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("DAL.Entities.WeekDay", b =>
                {
                    b.Property<int>("IdDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("dayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDay");

                    b.ToTable("WeekDays");
                });

            modelBuilder.Entity("DAL.Entities.BasicEducation", b =>
                {
                    b.HasOne("DAL.Entities.DirectorySpeciality", "DirectorySpeciality")
                        .WithMany()
                        .HasForeignKey("id_speciality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Cathedra", b =>
                {
                    b.HasOne("DAL.Entities.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("ID_faculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Classroom", b =>
                {
                    b.HasOne("DAL.Entities.ClassroomType", "ClassroomType")
                        .WithMany()
                        .HasForeignKey("id_classroomType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Curriculum", b =>
                {
                    b.HasOne("DAL.Entities.EducationalDegree", "EducationalDegree")
                        .WithMany()
                        .HasForeignKey("ID_EducationalDegree")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Form_of_education", "Form_of_education")
                        .WithMany()
                        .HasForeignKey("ID_Form_of_education")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("ID_Specialization")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.DirectorySpeciality", b =>
                {
                    b.HasOne("DAL.Entities.KnowledgeArea", "KnowledgeArea")
                        .WithMany()
                        .HasForeignKey("ID_KnowledgeArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Gruppa", b =>
                {
                    b.HasOne("DAL.Entities.Cathedra", "Cathedra")
                        .WithMany()
                        .HasForeignKey("id_cathedra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("id_curator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Form_of_education", "Form_of_education")
                        .WithMany()
                        .HasForeignKey("id_formOfEducation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.PlanEducationalProcess", b =>
                {
                    b.HasOne("DAL.Entities.FormDelivery", "FormDelivery")
                        .WithMany()
                        .HasForeignKey("ID_FormDelivery")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.UnderCycle", "UnderCycle")
                        .WithMany()
                        .HasForeignKey("ID_UnderCycle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Shedule", b =>
                {
                    b.HasOne("DAL.Entities.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("id_calssroom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.WeekDay", "DayOfWeek")
                        .WithMany()
                        .HasForeignKey("id_day")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.PlanEducationalProcess", "Disciplines")
                        .WithMany()
                        .HasForeignKey("id_discipline")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Gruppa", "Gruppa")
                        .WithMany()
                        .HasForeignKey("id_gruppa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.ParaNumber", "ParaNumber")
                        .WithMany()
                        .HasForeignKey("id_para")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Semestr", "Semestr")
                        .WithMany()
                        .HasForeignKey("id_semestr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("id_teacher");

                    b.HasOne("DAL.Entities.Week", "Week")
                        .WithMany()
                        .HasForeignKey("id_week")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("id_year")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Specialization", b =>
                {
                    b.HasOne("DAL.Entities.Cathedra", "Cathedra")
                        .WithMany()
                        .HasForeignKey("ID_Cathedra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.DirectorySpeciality", "DirectorySpeciality")
                        .WithMany()
                        .HasForeignKey("ID_Speciality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Student", b =>
                {
                    b.HasOne("DAL.Entities.Cathedra", "Cathedra")
                        .WithMany()
                        .HasForeignKey("id_cathedra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("id_faculty");

                    b.HasOne("DAL.Entities.Gruppa", "Gruppa")
                        .WithMany()
                        .HasForeignKey("id_gruppa");

                    b.HasOne("DAL.Entities.DirectorySpeciality", "DirectorySpeciality")
                        .WithMany()
                        .HasForeignKey("id_speciality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.StudentInfo", "StudentInfo")
                        .WithMany()
                        .HasForeignKey("id_studentInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Teacher", b =>
                {
                    b.HasOne("DAL.Entities.AcademicTitle", "AcademicTitle")
                        .WithMany()
                        .HasForeignKey("id_academicTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("id_position")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("id_rank")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.TeacherInfo", "TeacherInfo")
                        .WithMany()
                        .HasForeignKey("teacherInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.TeacherInfo", b =>
                {
                    b.HasOne("DAL.Entities.BasicEducation", "BasicEducation")
                        .WithMany()
                        .HasForeignKey("id_basicEducation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.TotalLoad", b =>
                {
                    b.HasOne("DAL.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("id_teacher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Semestr", "Semestr")
                        .WithMany()
                        .HasForeignKey("semester")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.UnderCycle", b =>
                {
                    b.HasOne("DAL.Entities.Cycle", "Cycle")
                        .WithMany()
                        .HasForeignKey("ID_cycle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("ID_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
